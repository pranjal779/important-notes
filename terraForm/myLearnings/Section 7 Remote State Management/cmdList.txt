terraform apply -auto-approve
terraform destroy -auto-approve


terraform plan -var="instancetype=t2.small

terraform.tfvars

file naming is important

if terraform.tfvars is not present you will have to mention the file
which is the .tfvars or which ever files have the variables
in the CLI

terraform plan -var-file="custom.tfvars"

Environment variables
in the cli/cmd
...\...>setx TF_VAR_instancetype m5.large

setx = win specific command
TF_VAR_ = terraform format
instancetype = variable name

echo %TF_VAR_instancetype% {in cmd}
you cannot fetch or get the value assigned through setx in win cmd
you will have to open a new terminal/cmd in win


from there you can do terraform plan, as the original cmd wont be able to reflect
the change through terraform plan - that is why 2nd cmd/terminal in win is needed.
{or refer lesson 34} - 7:32


in linux 9:48
export TF_VAR_instancetype="t2.micro"
echo $TF_VAR_instancetype


Taint
Recreating the resource
-replace (2:48)
The -replace option with terraform apply to force Terraformto replace an object
even though there are no configuration changess that would require it.

terraform apply -replace="aws_instance.web"


93 Cross-Project Collabration using Remote State
terraform_remote_state