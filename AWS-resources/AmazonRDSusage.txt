You have been assigned to design a new Amazon RDS database for a pharmaceutical company. Their most important requirement is high availability. You have proposed a multi AZ configuration for high availability. This the discussion has progressed to failovers scenarios, which scenarios will not cause a automatic failover question, mark. 

Option 1) loss of availability in the primary database availability zone. 
Option 2), a compute unit, failure on a primary database instance, 
Option 3), a long-running resource-intensive, stored procedure on the primary DB. 
Option. 4), loss of network connectivity to primary DB instance. 

Ans -> 3
Explanation. 

Amazon RDS detects and automatically recovers from the most common failures scenarios for multi-az deployments so that you can resume database operations as quickly as possible without administrative intervention. 
Amazon RDS automatically performs a failover in the event of any, of the following: 
1) loss of availability in primary availability zone 
2) loss of network connectivity to primary
3) compute, unit failure, on primary
4) storage failure on primary, 


Aurora Replicas
Aurora Replicas have two main purposes. You can issue queries to them to scale the read operations for your application. You typically do so by connecting to the reader endpoint of the cluster. 
That way, Aurora can spread the load for read-only connections across as many Aurora Replicas as you have in the cluster. Aurora Replicas also help to increase availability. If the writer instance in a cluster becomes unavailable, Aurora automatically promotes one of the reader instances to take its place as the new writer.

While setting up a Multi-AZ deployment for Aurora, you create an Aurora replica or reader node in a different AZ.

-------------
A retail company uses AWS Cloud to manage its technology infrastructure. The company has deployed its consumer-focused web application on EC2-based web servers and uses RDS PostgreSQL DB as the data store. The PostgreSQL DB is set up in a private subnet that allows inbound traffic from selected EC2 instances. The DB also uses AWS KMS for encrypting data at rest.

Which of the following steps would you recommend to facilitate secure access to the database?
Correct option:
Configure RDS to use SSL for data in transit

You can use Secure Socket Layer / Transport Layer Security (SSL/TLS) connections to encrypt data in transit. Amazon RDS creates an SSL certificate and installs the certificate on the DB instance when the instance is provisioned. For MySQL, you launch the MySQL client using the --ssl_ca parameter to reference the public key to encrypt connections. Using SSL, you can encrypt a PostgreSQL connection between your applications and your PostgreSQL DB instances. You can also force all connections to your PostgreSQL DB instance to use SSL.


